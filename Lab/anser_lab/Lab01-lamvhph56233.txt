# Lập trình hướng đối tượng (OOP)

## Phần 1: Tìm hiểu lập trình hướng đối tượng

### 1. Lập trình hướng đối tượng là gì?
Lập trình hướng đối tượng (Object-Oriented Programming - OOP) là một phong cách lập trình dựa trên các đối tượng. Trong OOP, chương trình được tổ chức thành các đối tượng, mỗi đối tượng biểu diễn cho một thực thể hoặc khái niệm trong thế giới thực, bao gồm thuộc tính (dữ liệu) và phương thức (hành động).

### 2. Class là gì, Object là gì, điểm khác nhau cơ bản của class và object?
- **Class**: Là khuôn mẫu (đề cương) để tạo ra các đối tượng. Class xác định các thuộc tính và phương thức mà đối tượng có thể sử dụng.
- **Object**: Là thực thể cụ thể được tạo ra từ class. Đối tượng là biểu hiện cụ thể của class trong bộ nhớ.

**Khác nhau:**
- Class là khuôn mẫu, Object là thực thể cụ thể.
- Class không chiếm bộ nhớ, Object chiếm bộ nhớ khi được tạo ra.

### 3. Thuộc tính, phương thức của một class là gì? Lấy ví dụ?
- **Thuộc tính**: Là các biến lưu trữ dữ liệu của class.
- **Phương thức**: Là các hàm trong class, thực hiện hành động hoặc thao tác.

**Ví dụ:**
```php
class Animal {
    public $name; // Thuộc tính
    public $age; // Thuộc tính

    public function speak() { // Phương thức
        echo "The animal is speaking.";
    }
}
```

## Phần 2: Tìm hiểu 4 tính chất của lập trình hướng đối tượng (OOP)

### 3. Tính kế thừa trong OOP là gì? Lấy ví dụ bằng code PHP
Tính kế thừa cho phép một class con thừa hưởng thuộc tính và phương thức của class cha.

**Ví dụ:**
```php
class Animal {
    public $name;

    public function speak() {
        echo "I am an animal.";
    }
}

class Dog extends Animal {
    public function speak() {
        echo "I am a dog.";
    }
}

$dog = new Dog();
$dog->speak(); // Output: I am a dog.
```

### 4. Access modifiers là gì? Phân biệt các loại Access modifiers
- **Access modifiers**: Xác định phạm vi truy cập của thuộc tính và phương thức trong class.
- **Các loại Access modifiers**:
  - `public`: Truy cập được tất cả mọi nơi.
  - `protected`: Chỉ truy cập được trong class định nghĩa và các class con.
  - `private`: Chỉ truy cập được trong class định nghĩa.

### 5. Tính đóng gói trong OOP là gì? Lấy ví dụ bằng code PHP
Tính đóng gói là việc giấu bớt chi tiết thông tin và cung cấp giao diện sử dụng cần thiết.

**Ví dụ:**
```php
class Person {
    private $name;

    public function setName($name) {
        $this->name = $name;
    }

    public function getName() {
        return $this->name;
    }
}

$person = new Person();
$person->setName("John");
echo $person->getName(); // Output: John
```

### 6. Setter và Getter là gì? Lấy ví dụ bằng code PHP
- **Setter**: Phương thức dùng để gán giá trị cho thuộc tính.
- **Getter**: Phương thức dùng để lấy giá trị của thuộc tính.

**Ví dụ:**
```php
class Car {
    private $brand;

    public function setBrand($brand) {
        $this->brand = $brand;
    }

    public function getBrand() {
        return $this->brand;
    }
}

$car = new Car();
$car->setBrand("Toyota");
echo $car->getBrand(); // Output: Toyota
